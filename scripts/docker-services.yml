version: '3.8'

services:
  queue-publish-service:
    container_name: queue-publish-service-${env}
    image: node:20-alpine
    restart: always
    working_dir: /queue-publish-service
    volumes:
      - ../:/queue-publish-service
      - /queue-publish-service/node_modules
    command: sh -c 'npm install && npm run queue-publish-service:serve-${env}'
    ports:
      - '0.0.0.0:${queuePublishServerPort}:${queuePublishServerPort}'
    networks:
      - real-time-to-do-network
    logging:
      driver: 'json-file'
      options:
        max-size: '128m'
        max-file: 25

  rabbitMQ:
    container_name: rabbitmq-service-${env}
    image: 'rabbitmq:management-alpine'
    restart: always
    depends_on:
      - queue-publish-service
    volumes:
      - ../rabbitMQ/advanced.config:/etc/rabbitmq/advanced.config
      - ../rabbitMQ/rabbit_enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ../rabbitMQ/rabbitmq-test.conf:/etc/rabbitmq/rabbitmq.conf
      - ../rabbitMQ/logs:/var/log/rabbitmq
    ports:
      - '0.0.0.0:${rmqPort}:5672'
      - '0.0.0.0:${rmqHttpPort}:15672'
    networks:
      - real-time-to-do-network
    environment:
      - RABBITMQ_DEFAULT_USER=${rmqUser}
      - RABBITMQ_DEFAULT_PASS=${rmqPassword}
    logging:
      driver: 'json-file'
      options:
        max-size: '128m'
        max-file: 25
networks:
  real-time-to-do-network:
    driver: host
# Не для dev среды
# networks:
#   real-time-to-do-network:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 172.16.254.0/24
#           gateway: 172.16.254.1

