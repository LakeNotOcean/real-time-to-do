generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model attached {
  id             BigInt           @id @default(autoincrement())
  attached_path  String           @db.VarChar(250)
  tasks_attached tasks_attached[]

  @@index([id])
}

model tasks {
  id             BigInt           @id(map: "ask_pkey") @default(autoincrement())
  user_id        BigInt           @default(autoincrement())
  title          String           @default("is not defined") @db.VarChar(100)
  description    String?          @db.VarChar(500)
  status         String           @default("is not defined") @db.VarChar(50)
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_id_fkey")
  tasks_attached tasks_attached[]

  @@index([id], map: "task_id_idx")
}

model users {
  id    BigInt  @id(map: "user_pkey") @default(autoincrement())
  name  String  @db.VarChar(100)
  tasks tasks[]

  @@index([id], map: "user_id_idx")
}

model tasks_attached {
  task_id     BigInt   @default(autoincrement())
  attached_id BigInt   @default(autoincrement())
  attached    attached @relation(fields: [attached_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "attached_id_fkey")
  tasks       tasks    @relation(fields: [task_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "task_id_fkey")

  @@id([task_id, attached_id], map: "task_id_attached_id_pkey")
}
